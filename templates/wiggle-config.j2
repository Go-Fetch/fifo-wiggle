## Wiggle allows caching of objects, please be aware
## that caching data will increase the chacne of stale data.
## However it can increase performance significantly. Different
## objects have different 'lifetimes' so different timeouts
## apply. Setting the timeout to 0 will disable caching.
## However stale data served by wiggle does NOT mean stale data
## within FiFo.
## Wiggle will automatically invalidate the cache when a action is taken
## that means when someone changes a setting it should be directy reflectd.
## A two tier cache is used and works the following way:
## * Items requested within the timeframe of the L1 TTL will be served
## directly from the cache.
## * Items requested within the timeframe of the L2 TTL are served
## from the cache once but invalidated and the cache asyncrounously
## updated.
## * Itemsrequested after the L2 TTL are invalidated emediately and fetched
## anew.
## 
## Default: off
## 
## Acceptable values:
##   - on or off
caching = off

## The time how long permissions for a token are cached,
## this seriously improves quick successive requests.
## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.token.l1 = 1s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.token.l2 = 1m

## Packages pretty much never change so a high TTL is possible.
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.package.l1 = 1m

## 
## Default: 10m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.package.l2 = 10m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.package.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.package.l2 = 1m

## Datasets pretty much never change so a high TTL is possible.
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.dataset.l1 = 1m

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.dataset.l2 = 1m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.dataset.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.dataset.l2 = 1m

## DTrace Scripts pretty much never change so a high TTL is possible.
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.dtrace.l1 = 1m

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.dtrace.l2 = 1m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.dtrace.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.dtrace.l2 = 1m

## Chunter updates services every 10s by default setting the TTL
## to X means stale service state will be 10s+X (i.e. 20s)
## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.hypervisor.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.hypervisor.l2 = 1m

## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.hypervisor.l1 = 1s

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.hypervisor.l2 = 10s

## IPranges only change when a Ip was claimed some delay is accaptable here
## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.iprange.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.iprange.l2 = 1m

## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.iprange.l1 = 1s

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.iprange.l2 = 10s

## Networks barely ever change
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.network.l1 = 1m

## 
## Default: 10m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.network.l2 = 10m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.network.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.network.l2 = 1m

## Orgs barely ever change too
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.org.l1 = 1m

## 
## Default: 10m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.org.l2 = 10m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.org.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.org.l2 = 1m

## Roles barely ever change too
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.role.l1 = 1m

## 
## Default: 10m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.role.l2 = 10m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.role.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.role.l2 = 1m

## Users barely change either
## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.user.l1 = 1m

## 
## Default: 10m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.user.l2 = 10m

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.user.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.user.l2 = 1m

## VMs can change rather frequently so we don't cache them by default
## 
## Default: 0.1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.vm.l1 = 0.1s

## 
## Default: 5s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.vm.l2 = 5s

## 
## Default: 0.1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.vm.l1 = 0.1s

## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.vm.l2 = 1s

## Groupings change sometimes so we can't have a long TTL
## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.grouping.l1 = 10s

## 
## Default: 1m
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.element.grouping.l2 = 1m

## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.grouping.l1 = 1s

## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
ttl.list.grouping.l2 = 10s

## Enable or disable compression
## 
## Default: on
## 
## Acceptable values:
##   - one of: on, off
compression = on

## The port wiggle listens to.
## 
## Default: 8080
## 
## Acceptable values:
##   - an integer
port = 8080

## Enable or disable SSL compression
## 
## Default: on
## 
## Acceptable values:
##   - one of: on, off, spdy
ssl = on

## The port wiggle listens to.
## 
## Default: 8443
## 
## Acceptable values:
##   - an integer
ssl.port = 8443

## The SSL CA certificate.
## 
## Default: /var/db/fifo/fifo.crt
## 
## Acceptable values:
##   - text
ssl.cacertfile = /var/db/fifo/fifo.crt

## The SSL Server certificate
## 
## Default: /var/db/fifo/fifo.pem
## 
## Acceptable values:
##   - text
ssl.certfile = /var/db/fifo/fifo.pem

## The SSL Key file
## 
## Default: /var/db/fifo/fifo.key
## 
## Acceptable values:
##   - text
ssl.keyfile = /var/db/fifo/fifo.key

## Number of acceptor processes that are keeped ready
## 
## Default: 100
## 
## Acceptable values:
##   - an integer
acceptors = 100

## The TCP IP that mdns messages arrive to.
## 
## Default: 127.0.0.1
## 
## Acceptable values:
##   - text
listening_ip = {{ ansible_default_ipv4['address'] }}

## where do you want the console.log output:
## off : nowhere
## file: the file specified by log.console.file
## console : standard out
## both : log.console.file and standard out.
## 
## Default: file
## 
## Acceptable values:
##   - one of: off, file, console, both
log.console = file

## the log level of the console log
## 
## Default: info
## 
## Acceptable values:
##   - one of: debug, info, warning, error
log.console.level = info

## location of the console log
## 
## Default: /var/log/wiggle/console.log
## 
## Acceptable values:
##   - text
log.console.file = /var/log/wiggle/console.log

## location of the error log
## 
## Default: /var/log/wiggle/error.log
## 
## Acceptable values:
##   - text
log.error.file = /var/log/wiggle/error.log

## location of the debug log
## 
## Default: /var/log/wiggle/debug.log
## 
## Acceptable values:
##   - text
log.debug.file = /var/log/wiggle/debug.log

## turn on syslog
## 
## Default: off
## 
## Acceptable values:
##   - one of: on, off
log.syslog = off

## the log level of the watchdog log
## 
## Default: error
## 
## Acceptable values:
##   - one of: debug, info, warning, error
log.watchdog.level = error

## the log level of the watchdog log
## 
## Default: fifo
## 
## Acceptable values:
##   - text
log.watchdog.cluster = fifo

## the log level of the watchdog log
## 
## Default: wiggle
## 
## Acceptable values:
##   - text
log.watchdog.service = wiggle

## The ip of the watchdog server
## 
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
## log.watchdog.host.name = 127.0.0.1:4444

## Whether to write a crash log, and where.
## Commented/omitted/undefined means no crash logger.
## 
## Default: /var/log/wiggle/crash.log
## 
## Acceptable values:
##   - text
log.crash.file = /var/log/wiggle/crash.log

## Maximum size in bytes of events in the crash log - defaults to 65536
## 
## Default: 64KB
## 
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.msg_size = 64KB

## Maximum size of the crash log in bytes, before its rotated, set
## to 0 to disable rotation - default is 0
## 
## Default: 10MB
## 
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.size = 10MB

## What time to rotate the crash log - default is no time
## rotation. See the lager README for a description of this format:
## https://github.com/basho/lager/blob/master/README.org
## 
## Default: $D0
## 
## Acceptable values:
##   - text
log.crash.date = $D0

## Number of rotated crash logs to keep, 0 means keep only the
## current one - default is 0
## 
## Default: 5
## 
## Acceptable values:
##   - an integer
log.crash.count = 5

## Whether to redirect error_logger messages into lager - defaults to true
## 
## Default: on
## 
## Acceptable values:
##   - one of: on, off
log.error.redirect = on

## maximum number of error_logger messages to handle in a second
## lager 2.0.0 shipped with a limit of 50, which is a little low for riak's startup
## 
## Default: 100
## 
## Acceptable values:
##   - an integer
log.error.messages_per_second = 100

## The place the SNMP agent looks for it's configuration.
## 
## Default: snmp/conf/
## 
## Acceptable values:
##   - text
snmp.config_dir = snmp/conf/

## This is where the SNMP related databases and data gets
## stored, it must be writable for the process.
## 
## Default: /var/db/wiggle
## 
## Acceptable values:
##   - text
snmp.data_dir = /var/db/wiggle

## Erlang NSQ client.
## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
nsq.discover_interval = 10s

## Percent of jitter.
## 
## Default: 10
## 
## Acceptable values:
##   - an integer
nsq.discover_jitter = 10

## Maximum messages consued at a time.
## 
## Default: 100
## 
## Acceptable values:
##   - an integer
nsq.max_in_flight = 100

## Interval in which discovery servers are polled.
## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
nsq.retry_inital = 1s

## Interval in which discovery servers are polled.
## 
## Default: 10s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
nsq.max_retry_delay = 10s

## The way retry delays increase.
## 
## Default: linear
## 
## Acceptable values:
##   - one of: linear, quadratic
nsq.retry_algo = linear

## The default realm to use for snarl calls.
## 
## Default: default
## 
## Acceptable values:
##   - text
libsnarl.realm = default

## Fetcher configurations
## 
## Default: 10
## 
## Acceptable values:
##   - an integer
upload.pool_size = 10

## 
## Default: 15
## 
## Acceptable values:
##   - an integer
upload.pool_max = 15

## 
## Default: 3
## 
## Acceptable values:
##   - an integer
upload.retry = 3

## 
## Default: 10
## 
## Acceptable values:
##   - an integer
download.pool_size = 10

## 
## Default: 15
## 
## Acceptable values:
##   - an integer
download.pool_max = 15

## 
## Default: 10
## 
## Acceptable values:
##   - an integer
download.preload_chunks = 10

## 
## Default: 3
## 
## Acceptable values:
##   - an integer
download.retry = 3

## Domain this listener is listening to.
## 
## Default: .local
## 
## Acceptable values:
##   - text
mdns.client.domain = .local

## The IP of the interface mdns traffic is received.
## a ip of 0.0.0.0 means the first found interface. The default is 5453
## 
## Default: 0.0.0.0
## 
## Acceptable values:
##   - text
mdns.client.interface = 0.0.0.0

## The multicast group the MDNS service is running on.
## 
## Default: 224.0.0.251:5353
## 
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
mdns.client.multicast_group = 224.0.0.251:5353

## the time that the mdns client iwll wait for a reply from a counterpart
## before it claims a timeout.
## 
## Default: 1s500ms
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
mdns.client.timeout = 1s500ms

## Number of tiems a given request will try to find a responding host
## before it gives up.
## 
## Default: 4
## 
## Acceptable values:
##   - an integer
mdns.client.retries = 4

## Deley between retries to ensure minimal hickups don't blow up the
## system.
## 
## Default: 150ms
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
mdns.client.retrie_delay = 150ms

## Number of downvotes a endpoint needs to be taken offline for this round.
## before it gives up.
## 
## Default: 5
## 
## Acceptable values:
##   - an integer
mdns.client.max_downvotes = 5

## Initial/idle size of a connection pool.
## 
## Default: 5
## 
## Acceptable values:
##   - an integer
mdns.client.pool.initial = 5

## Maximum size of the connector pools, ther is one pool per endpoint per
## service.
## 
## Default: 5
## 
## Acceptable values:
##   - an integer
mdns.client.pool.max = 5

## The DalmatinerDB backend ip and port.
## 
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
## folsom_ddb.ip = 127.0.0.1:4444

## The bucket to store folsom data in.
## 
## Default: fifo
## 
## Acceptable values:
##   - text
folsom_ddb.bucket = fifo

## The prefix that is added to each metric, in total the metric
## will be contructed [<PREFIX> | <Metric Path>]
## 
## Default: sniffle
## 
## Acceptable values:
##   - text
folsom_ddb.prefix = sniffle

## The interval in which folsom data is checked, default is 1 Second.
## 
## Default: 1s
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
folsom_ddb.interval = 1s

## Enables or disables metrics for the Erlang VM.
## 
## Default: false
## 
## Acceptable values:
##   - true or false
folsom_ddb.vm_metrics = false

## NSQ based RPC mechanism.
## 
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
## rpc.discoverer.name = 127.0.0.1:4161

## The channel the RPC replies are send to, this defaults to the phash2
## value of the hostname.
## 
## Acceptable values:
##   - text
## rpc.channel = rpc-<phash of hostname>

## The encoding the data is send and received with, default is JSON.
## 
## Default: json
## 
## Acceptable values:
##   - one of: json, bert
rpc.encoding = json

## Name of the Erlang node
## 
## Default: wiggle@127.0.0.1
## 
## Acceptable values:
##   - text
nodename = wiggle@{{ ansible_default_ipv4['address'] }}

## Cookie for distributed node communication.  All nodes in the
## same cluster should use the same cookie or they will not be able to
## communicate.
## 
## Default: erlang
## 
## Acceptable values:
##   - text
distributed_cookie = {{ wiggle_cookie }}

## Sets the number of threads in async thread pool, valid range
## is 0-1024. If thread support is available, the default is 64.
## More information at: http://erlang.org/doc/man/erl.html
## 
## Default: 64
## 
## Acceptable values:
##   - an integer
erlang.async_threads = 64

## The number of concurrent ports/sockets
## Valid range is 1024-134217727
## 
## Default: 65536
## 
## Acceptable values:
##   - an integer
erlang.max_ports = 65536

## Set scheduler forced wakeup interval. All run queues will be
## scanned each Interval milliseconds. While there are sleeping
## schedulers in the system, one scheduler will be woken for each
## non-empty run queue found. An Interval of zero disables this
## feature, which also is the default.
## This feature is a workaround for lengthy executing native code, and
## native code that do not bump reductions properly.
## More information: http://www.erlang.org/doc/man/erl.html#+sfwi
## 
## Acceptable values:
##   - an integer
## erlang.schedulers.force_wakeup_interval = 500

## Enable or disable scheduler compaction of load. By default
## scheduler compaction of load is enabled. When enabled, load
## balancing will strive for a load distribution which causes as many
## scheduler threads as possible to be fully loaded (i.e., not run out
## of work). This is accomplished by migrating load (e.g. runnable
## processes) into a smaller set of schedulers when schedulers
## frequently run out of work. When disabled, the frequency with which
## schedulers run out of work will not be taken into account by the
## load balancing logic.
## More information: http://www.erlang.org/doc/man/erl.html#+scl
## 
## Acceptable values:
##   - one of: true, false
## erlang.schedulers.compaction_of_load = false

## Enable or disable scheduler utilization balancing of load. By
## default scheduler utilization balancing is disabled and instead
## scheduler compaction of load is enabled which will strive for a
## load distribution which causes as many scheduler threads as
## possible to be fully loaded (i.e., not run out of work). When
## scheduler utilization balancing is enabled the system will instead
## try to balance scheduler utilization between schedulers. That is,
## strive for equal scheduler utilization on all schedulers.
## More information: http://www.erlang.org/doc/man/erl.html#+sub
## 
## Acceptable values:
##   - one of: true, false
## erlang.schedulers.utilization_balancing = true


{% if 'no_wiggle_mdns' in group_names %}
mdns.server = disabled
{% endif %}